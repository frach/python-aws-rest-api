---
test_name: Post items with wrong input data.
stages:
  - name: Try to create an item with "non_existing_key" next to "name".
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items"
      method: POST
      json:
        name: Test Item Number One
        non_existing_key: some_value
    response:
      status_code: 400
      headers:
        content-type: application/json
      json:
        statusCode: 400
        message: "Failed schema validation. Error: data must not contain {{'non_existing_key'}} properties, Path: ['data'],
          Data: {{'name': 'Test Item Number One', 'non_existing_key': 'some_value'}}"

  - name: Try to create an item with "non_existing_key" without "name".
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items"
      method: POST
      json:
        non_existing_key: some_value
    response:
      status_code: 400
      headers:
        content-type: application/json
      json:
        statusCode: 400
        message: "Failed schema validation. Error: data must contain ['name'] properties, Path: ['data'],
          Data: {{'non_existing_key': 'some_value'}}"

---
test_name: Post an item with the same name
stages:
  - name: Make sure item doesn't exist.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items/test-item-number-two"
      method: DELETE
    response:
      status_code: [200, 404]

  - name: Create an item with optional parameter.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items"
      method: POST
      json:
        name: Test Item Number Two
    response:
      status_code: 200
      headers:
        content-type: application/json
      json:
        item:
          id: test-item-number-two
          name: Test Item Number Two

  - name: Repeat the item creation request with the same name.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items"
      method: POST
      json:
        name: Test Item Number Two
    response:
      status_code: 400
      headers:
        content-type: application/json
      json:
        statusCode: 400
        message: The item already exists.

  - name: Remove the item.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items/test-item-number-two"
      method: DELETE
    response:
      status_code: 200
      json:
        item:
          id: test-item-number-two
          name: Test Item Number Two

---
test_name: Create an item and modify it.
stages:
  - name: Make sure item doesn't exist.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items/test-item-number-three"
      method: DELETE
    response:
      status_code: [200, 404]

  - name: Create an item with optional parameter.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items"
      method: POST
      json:
        name: Test Item Number Three
        optional_attr: some-optonal-value
    response:
      status_code: 200

  - name: Modify optional attribute.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items/test-item-number-three"
      method: PUT
      json:
        optional_attr: some-modified-value
    response:
      status_code: 200
      json:
        item:
          id: test-item-number-three
          name: Test Item Number Three
          optional_attr: some-modified-value

  - name: Get the updated item.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items/test-item-number-three"
      method: GET
    response:
      status_code: 200
      json:
        item:
          id: test-item-number-three
          name: Test Item Number Three
          optional_attr: some-modified-value

  - name: Remove the item.
    request:
      url: "https://{tavern.env_vars.API_BASE_URL}/items/tvrn-put-test3-item"
      method: DELETE

# ---
# test_name: Modify non-existing item.
# stages:
#   - name: Ensure an item doesn't exist.
#     request:
#       url: "https://{tavern.env_vars.API_BASE_URL}/items/tvrn-put-test4-item"
#       method: GET
#     response:
#       status_code: 404
#       json:
#         statusCode: 404
#         message: Not found

#   - name: Try to modify a non-existing item.
#     request:
#       url: "https://{tavern.env_vars.API_BASE_URL}/items/tvrn-put-test4-item"
#       method: PUT
#       json:
#         optional_attr: modified-attribute
#     response:
#       status_code: 404
#       json:
#         statusCode: 404
#         message: Not found
